#!/bin/bash
### BEGIN INIT INFO
# Provides:          nifferd
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: niffer daemon startup script
# Description:       niffer daemon startup script
### END INIT INFO

# Source function library.
#. /etc/init.d/functions
. /lib/lsb/init-functions


RETVAL=0
prog="justniffer"
desc="Justniffer Daemon"
LOG=/opt/esm/dl/inbox/justniffer/audit.log

start() {
	_pid=`ps -ef | grep "$prog -i" |grep -v grep| awk '{print $2}'`
	if [ -z "$_pid" ]
	then
		echo -n "Starting $desc ($prog): "
		#justniffer -c /opt/esm/etc/nifferd.conf >> $LOG &
		justniffer -i eth1 -p "port 80 or port 8080" -l "%request.timestamp(%s) %source.ip %request.header.host %request.size %request.url" >> /opt/esm/dl/inbox/justniffer/audit.log &
		RETVAL=$?
		[ $RETVAL -eq 0 ] && touch /var/lock/$prog
		
	else
		echo -n "$desc ($prog) is running"
		RETVAL=0
	fi
	echo
	return $RETVAL
}

stop() {
	_pid=`ps -ef | grep "$prog -i" |grep -v grep| awk '{print $2}'`
	if [ -z "$_pid" ]
	then
		echo -n "$desc ($prog) is stopped"
		RETVAL=0
	else
		echo -n $"Shutting down $desc ($prog): "		
		kill $_pid
		RETVAL=$?
		[ $RETVAL -eq 0 ] && rm -f /var/lock/$prog
	fi
	echo
	return $RETVAL
}

status() {
    _pid=`ps -ef | grep "$prog -i" |grep -v grep| awk '{print $2}'`
    if [ -z "$_pid" ]
    then
        echo "$prog is NOT running"
    else
        echo "$prog is running ($_pid)"
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
  	status)
        status
        ;;
  	*)
	echo $"Usage: $0 {start|stop|status|restart}"
	RETVAL=1
esac

exit $RETVAL